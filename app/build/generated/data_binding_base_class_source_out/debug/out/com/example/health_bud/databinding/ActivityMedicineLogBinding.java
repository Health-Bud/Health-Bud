// Generated by view binder compiler. Do not edit!
package com.example.health_bud.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.health_bud.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMedicineLogBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView dose;

  @NonNull
  public final EditText inputDose;

  @NonNull
  public final EditText inputMedicine;

  @NonNull
  public final EditText inputNotes;

  @NonNull
  public final Button medicineBackButton;

  @NonNull
  public final TextView medicineName;

  @NonNull
  public final TextView notes;

  @NonNull
  public final Button recordMedicineEntry;

  private ActivityMedicineLogBinding(@NonNull ConstraintLayout rootView, @NonNull TextView dose,
      @NonNull EditText inputDose, @NonNull EditText inputMedicine, @NonNull EditText inputNotes,
      @NonNull Button medicineBackButton, @NonNull TextView medicineName, @NonNull TextView notes,
      @NonNull Button recordMedicineEntry) {
    this.rootView = rootView;
    this.dose = dose;
    this.inputDose = inputDose;
    this.inputMedicine = inputMedicine;
    this.inputNotes = inputNotes;
    this.medicineBackButton = medicineBackButton;
    this.medicineName = medicineName;
    this.notes = notes;
    this.recordMedicineEntry = recordMedicineEntry;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMedicineLogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMedicineLogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_medicine_log, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMedicineLogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dose;
      TextView dose = ViewBindings.findChildViewById(rootView, id);
      if (dose == null) {
        break missingId;
      }

      id = R.id.inputDose;
      EditText inputDose = ViewBindings.findChildViewById(rootView, id);
      if (inputDose == null) {
        break missingId;
      }

      id = R.id.inputMedicine;
      EditText inputMedicine = ViewBindings.findChildViewById(rootView, id);
      if (inputMedicine == null) {
        break missingId;
      }

      id = R.id.inputNotes;
      EditText inputNotes = ViewBindings.findChildViewById(rootView, id);
      if (inputNotes == null) {
        break missingId;
      }

      id = R.id.medicineBackButton;
      Button medicineBackButton = ViewBindings.findChildViewById(rootView, id);
      if (medicineBackButton == null) {
        break missingId;
      }

      id = R.id.medicineName;
      TextView medicineName = ViewBindings.findChildViewById(rootView, id);
      if (medicineName == null) {
        break missingId;
      }

      id = R.id.notes;
      TextView notes = ViewBindings.findChildViewById(rootView, id);
      if (notes == null) {
        break missingId;
      }

      id = R.id.recordMedicineEntry;
      Button recordMedicineEntry = ViewBindings.findChildViewById(rootView, id);
      if (recordMedicineEntry == null) {
        break missingId;
      }

      return new ActivityMedicineLogBinding((ConstraintLayout) rootView, dose, inputDose,
          inputMedicine, inputNotes, medicineBackButton, medicineName, notes, recordMedicineEntry);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
